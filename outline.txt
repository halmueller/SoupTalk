Alice in Wonderland

Problem statement
Samples: official SFD page, NRHP updates
Scraping vs API: Seattle Fire official page, seattle.data.gov, sfdlive.com, Wikipedia API
Scraping is messy, brittle
How to build sfdlive.com from the live updated SFD dispatch page?

Given a web page, emit the geodata in a standard format

Tonight:
Just enough Python
Dissect the web page (browser, BeautifulSoup)
Extract the addresses (BeautifulSoup)
Geocode them (Nominatim, others)
Emit JSON (or CSV or Shapefile or GeoJSON or ....)

Web pages:
static page. What we'll use.
Aside: dynamic page. Use requests-html or Selenium for these.

Web page/HTML structure. DOM, page elements.
Look at W3 schools
* [HTML Tables](https://www.w3schools.com/html/html\_tables.asp)
* [HTML id Attribute](https://www.w3schools.com/tags/att\_id.asp)
https://www.w3schools.com/python/python_lists.asp
https://www.w3resource.com/python-exercises/list/python-data-type-list-exercise-269.php#:~:text=Python%20Code%3A,a%20step%20of%20'nth'.

Quick look at the SFD page

Just enough Python
environment

Setup:
install Python3 and virtual environment
in venv, install BS4 and Requests and Nominatim
run the check_install script

Exploration/prospecting: 
Step-by-step dissection of the SFD page

Script: for each row, pull out call type, units, call number, address
